@model E_Ticaret.ViewModel.ProductViewModel


<div class="row">
    <div class="col-md-3">
        @await Component.InvokeAsync("Categories")
    </div>
    <div class="col-md-9">
        <div class="row">
            @foreach (var product in Model.Products)
            {
                <div class="col-md-4">
                    @await Html.PartialAsync("_product", product)
                </div>
            }
        </div>

        <div class="row">
            <div class="col">
                <nav aria-label="Page navigation example">
                    <ul class="pagination">
                        @if (String.IsNullOrEmpty(Model.PageInfo.CurrentCategory))
                        {
                            int now = Model.PageInfo.CurrentPage;
                            int totalpage = Model.PageInfo.TotalPages();
                            if (now <= 1)
                            {
                                now = totalpage;
                            }
                            <li class="page-item"><a class="page-link" href="/products?page=@(now-1)">Previous</a></li>
                        }
                        else
                        {
                            int now = Model.PageInfo.CurrentPage;
                            int totalpage = Model.PageInfo.TotalPages();
                            if (now <= 1)
                            {
                                now = totalpage;
                            }
                            <li class="page-item"><a class="page-link" href="/products/@Model.PageInfo.CurrentCategory?page=@(now-1)">Previous</a></li>
                        }



                        @for (int i = 0; i < Model.PageInfo.TotalPages(); i++)
                        {
                            if (String.IsNullOrEmpty(Model.PageInfo.CurrentCategory)) //eğer tüm ürünlerde geçiş yapacak isek(yani category bilgisi url de yok)
                            {
                                <li class="page-item @(Model.PageInfo.CurrentPage==i+1?"active":"")">
                                    <a class="page-link" href="/products?page=@(i+1)">@(i+1)</a>
                                </li>
                            }
                            else
                            {
                                <li class="page-item @(Model.PageInfo.CurrentPage==i+1?"active":"")">
                                    <a class="page-link" href="/products/@Model.PageInfo.CurrentCategory?page=@(i+1)">@(i+1)</a>
                                </li>
                            }

                        }
                        @if (String.IsNullOrEmpty(Model.PageInfo.CurrentCategory))
                        {
                            int now = Model.PageInfo.CurrentPage;
                            int totalpage = Model.PageInfo.TotalPages();
                            if (now >=totalpage)
                            {
                                now = totalpage;
                                <li class="page-item"><a class="page-link" href="/products?page=@(now)">Next</a></li>

                            }
                            else
                            {
                                <li class="page-item"><a class="page-link" href="/products?page=@(now + 1)">Next</a></li>
                            }
                        }
                        else
                        {
                            int now = Model.PageInfo.CurrentPage;
                            int totalpage = Model.PageInfo.TotalPages();
                            if (now >=totalpage)
                            {
                                now = totalpage;
                                <li class="page-item"><a class="page-link" href="/products?page=@(now)">Next</a></li>

                            }
                            else
                            {
                                <li class="page-item"><a class="page-link" href="/products?page=@(now + 1)">Next</a></li>
                            }
                        }
                    </ul>
                </nav>
            </div>
        </div>
    </div>
</div>